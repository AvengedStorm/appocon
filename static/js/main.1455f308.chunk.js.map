{"version":3,"sources":["containers/ContactsPage.js","containers/AppointmentsPage.js","containers/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["ContactsPage","props","state","savedContacts","firstName","lastName","phoneNumber","handleNameChange","bind","handleLastNameChange","handlePNumberChange","handleSubmit","renderContacts","a","this","setState","target","value","b","c","e","preventDefault","contact","map","index","htmlFor","id","name","type","onChange","placeholder","onClick","style","fontWeight","React","Component","AppointmentsPage","savedAppo","title","description","address","date","handleTitleChange","handledescriptionChange","handleAddressChange","handleDateChange","renderAppos","d","Nav","navStyle","color","textDecoration","className","to","HomePage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1455f308.chunk.js","sourcesContent":["import React from 'react';\r\nimport react, {useState, useEffect} from 'react';\r\n\r\nclass ContactsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      savedContacts: [\r\n        {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          phoneNumber: \"\"\r\n        }\r\n      ]\r\n    }\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleLastNameChange = this.handleLastNameChange.bind(this);\r\n    this.handlePNumberChange = this.handlePNumberChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.renderContacts = this.renderContacts.bind(this);\r\n  }\r\n\r\n  handleNameChange(a) {\r\n    this.setState({firstName: a.target.value})\r\n  }\r\n\r\n  handleLastNameChange(b) {\r\n    this.setState({lastName: b.target.value})\r\n  }\r\n\r\n  handlePNumberChange(c) {\r\n    this.setState({phoneNumber: c.target.value})\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const contact = {\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      phoneNumber: this.state.phoneNumber\r\n    }\r\n    this.setState({...this.state, savedContacts: [...this.state.savedContacts, contact]})\r\n    this.setState({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phoneNumber: \"\"\r\n    })\r\n  }\r\n\r\n  renderContacts() {\r\n    return this.state.savedContacts.map((contact, index) => {\r\n      const {firstName, lastName, phoneNumber} = contact\r\n      return (\r\n        <tr>\r\n          <td>{firstName}</td>\r\n          <td>{lastName}</td>\r\n          <td>{phoneNumber}</td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>Contacts Page:</h2>\r\n          <form>\r\n            <h2>Contact:</h2>\r\n            <label htmlFor=\"firstName\">First Name: </label>\r\n            <input id=\"firstName\" name=\"firstName\" type=\"text\" value={this.state.firstName} onChange={this.handleNameChange} placeholder=\"Contact's first name\"/>\r\n              <br/>\r\n            <label htmlFor=\"lastName\">Last Name: </label>\r\n            <input id=\"lastName\" name=\"lastName\" type=\"lastName\" value={this.state.lastName} onChange={this.handleLastNameChange} placeholder=\"Contact's last name\"/>\r\n              <br/>\r\n            <label htmlFor=\"phoneNumber\">Phone Number: </label>\r\n            <input id=\"phoneNumber\" name=\"phoneNumber\" type=\"text\" value={this.state.phoneNumber} onChange={this.handlePNumberChange} placeholder=\"Contact's phone\"/>\r\n              <br/>\r\n            <button onClick={this.handleSubmit}>Save data!</button>\r\n          </form>\r\n        </div>\r\n        <div>\r\n            <h1>Contacts Table</h1>\r\n            <table id='contacts'>\r\n              <thead style={{fontWeight:\"bold\"}}>\r\n                <tr>\r\n                  <td>FIRST NAME</td>\r\n                  <td>LAST NAME</td>\r\n                  <td>PHONE NUMBER</td>\r\n                </tr>\r\n              </thead>\r\n               <tbody>\r\n                  {this.renderContacts()}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactsPage;","import React from 'react';\r\nimport react, {useState, useEffect} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {DatePickerComponent} from \"@syncfusion/ej2-react-calendars\";\r\n\r\nclass AppointmentsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      savedAppo: [\r\n        {\r\n          title: \"\",\r\n          description: \"\",\r\n          address: \"\",\r\n          date: \"\"\r\n        }\r\n      ]\r\n    }\r\n    this.handleTitleChange = this.handleTitleChange.bind(this);\r\n    this.handledescriptionChange = this.handledescriptionChange.bind(this);\r\n    this.handleAddressChange = this.handleAddressChange.bind(this);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.renderContacts = this.renderAppos.bind(this);\r\n  }\r\n\r\n  handleTitleChange(a) {\r\n    this.setState({title: a.target.value})\r\n  }\r\n\r\n  handledescriptionChange(b) {\r\n    this.setState({description: b.target.value})\r\n  }\r\n\r\n  handleAddressChange(c) {\r\n    this.setState({address: c.target.value})\r\n  }\r\n\r\n  handleDateChange(d) {\r\n    this.setState({date: d.target.value})\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const contact = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      address: this.state.address,\r\n      date: this.state.date\r\n    }\r\n    this.setState({...this.state, savedAppo: [...this.state.savedAppo, contact]})\r\n    this.setState({\r\n      title: \"\",\r\n      description: \"\",\r\n      address: \"\",\r\n      date:\"\"\r\n    })\r\n  }\r\n\r\n  renderAppos() {\r\n    return this.state.savedAppo.map((contact, index) => {\r\n      const {title: title, description: description, address: address, date: date} = contact\r\n      return (\r\n        <tr>\r\n          <td>{title}</td>\r\n          <td>{description}</td>\r\n          <td>{address}</td>\r\n          <td>{date}</td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>Appointments Page:</h2>\r\n          <form>\r\n            <h2>Appointment:</h2>\r\n            <label htmlFor=\"title\">Title: </label>\r\n            <input id=\"title\" name=\"title\" type=\"text\" value={this.state.title} onChange={this.handleTitleChange} placeholder=\"Appointment's title\"/>\r\n              <br/>\r\n            <label htmlFor=\"description\">Description: </label>\r\n            <input id=\"description\" name=\"description\" type=\"description\" value={this.state.description} onChange={this.handledescriptionChange} placeholder=\"Appointment's description\"/>\r\n              <br/>\r\n            <label htmlFor=\"address\">Address: </label>\r\n            <input id=\"address\" name=\"address\" type=\"text\" value={this.state.address} onChange={this.handleAddressChange} placeholder=\"Appointment's address\"/>\r\n              <br/>\r\n            <label htmlFor=\"date\">Date: </label>\r\n            <input id=\"date\" name=\"date\" type=\"date-picker\" value={this.state.date} onChange={this.handleDateChange} placeholder=\"Appointment's date\"/>\r\n             <br/>\r\n            <button onClick={this.handleSubmit}>Save Appointment!</button>\r\n          </form>\r\n        </div>\r\n        <div>\r\n            <h1>Appointments Table:</h1>\r\n            <table id='appo'>\r\n              <thead style={{fontWeight:\"bold\"}}>\r\n                <tr>\r\n                  <td>TITLE</td>\r\n                  <td>DESCRIPTION</td>\r\n                  <td>ADDRESS</td>\r\n                  <td>Date</td>\r\n                </tr>\r\n              </thead>\r\n               <tbody>\r\n                  {this.renderAppos()}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppointmentsPage;","import react, {useState, useEffect} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    const navStyle = {\r\n        color: 'white',\r\n        textDecoration: 'none'\r\n    }\r\n\r\n  return (\r\n    <div className=\"Nav\">\r\n      <nav>\r\n          <Link style={navStyle} to=\"/\">\r\n          <h3 className=\"nav\">AppoCon</h3>\r\n          </Link>\r\n          <ul className=\"nav-links\">\r\n              <Link style={navStyle} to=\"/containers/ContactsPage\">\r\n              <li className=\"nav\">Contacts</li>\r\n              </Link>\r\n              <Link style={navStyle} to=\"/containers/AppointmentsPage\">\r\n              <li className=\"nav\">Appointments</li>\r\n              </Link>\r\n          </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;","import react, {useState, useEffect} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport ContactsPage from './containers/ContactsPage';\nimport AppointmentsPage from './containers/AppointmentsPage';\nimport Nav from './containers/Nav';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Nav />\n      <switch>\n      <Route path=\"/containers/ContactsPage\" component={ContactsPage} />\n      <Route path=\"/containers/AppointmentsPage\" component={AppointmentsPage} />\n      <Route path=\"/\" exact component={HomePage} />\n      </switch>\n    </div>\n    </Router>\n  );\n}\n\nconst HomePage = () => {\n  return (\n    <div>\n      <h1>Welcome to AppoCon!</h1>\n      <div>\n        <h2 style={{fontWeight: \"normal\"}}>\n          At this site you can save your own contacts and own appointments for later use!<br/>\n          for your own convenience you can go to your desired place through the navigation bar.\n        </h2>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}